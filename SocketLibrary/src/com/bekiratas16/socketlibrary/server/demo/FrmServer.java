/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bekiratas16.socketlibrary.server.demo;

import com.bekiratas16.socketlibrary.server.classes.ListenToClient;
import com.bekiratas16.socketlibrary.server.classes.TCPServer;
import javax.swing.SwingUtilities;

/**
 *
 * @author ACER
 */
public class FrmServer extends javax.swing.JFrame {

    private TCPServer server;
   
    /**
     * Creates new form FrmServer
     */
    public FrmServer() {
        super("Socket Server Demo Ver 1.0");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spLog = new javax.swing.JScrollPane();
        taLog = new javax.swing.JTextArea();
        btnStartStop = new javax.swing.JButton();
        txtPort = new javax.swing.JTextField();
        lblPort = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        taLog.setColumns(20);
        taLog.setRows(5);
        spLog.setViewportView(taLog);

        btnStartStop.setText("Start");
        btnStartStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartStopActionPerformed(evt);
            }
        });

        txtPort.setText("8080");

        lblPort.setText("Port");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblPort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnStartStop)
                        .addContainerGap(167, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(spLog)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spLog, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStartStop)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPort))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartStopActionPerformed

        if (server != null && server.isServerRunning()) {
            server.stop();
            server = null;
            return;
        }
        int port = 0;
        try {

            port = Integer.parseInt(txtPort.getText());

        } catch (Exception e) {

            e.printStackTrace();
            return;
        }

        server = new TCPServer(port) {
            @Override
            public void onClientConnected(ListenToClient client) {
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        taLog.append(client.getClientId() + " Connected\n");
                    }
                });
            }

            @Override
            public void onClientDisconnected(ListenToClient client) {

                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        taLog.append(client.getClientId() + " Disconnected\n");

                    }
                });
            }

            @Override
            public void onServerStarted() {

                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        taLog.append("Server Started\n");
                        btnStartStop.setText("Stop");

                    }
                });
            }

            @Override
            public void onServerStopped() {
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        taLog.append("Server Stopped\n");
                        btnStartStop.setText("Start");

                    }
                });

            }

            @Override
            public void onSuccessMessage(ListenToClient client, String message) {
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {

                        taLog.append(client.getClientId() + " said :" + message.trim() + "\n");
                        server.broadCastMessage(client, message);

                    }
                });

            }

            @Override
            public void onFailMessage(ListenToClient client, String message) {

                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {

                        taLog.append(message.trim() + "\n");
                        server.broadCastMessage(client, message);

                    }
                });
            }
        };
        server.start();

    }//GEN-LAST:event_btnStartStopActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if (server != null && server.isServerRunning()) {
            server.stop();
            server = null;
        }

    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmServer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStartStop;
    private javax.swing.JLabel lblPort;
    private javax.swing.JScrollPane spLog;
    private javax.swing.JTextArea taLog;
    private javax.swing.JTextField txtPort;
    // End of variables declaration//GEN-END:variables
}
